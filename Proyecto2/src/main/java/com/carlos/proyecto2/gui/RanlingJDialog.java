/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.carlos.proyecto2.gui;

import com.carlos.proyecto2.Casillas.ListaCasilla;
import com.carlos.proyecto2.EscrituraLecturaArchivos.LecturaObjeto;
import com.carlos.proyecto2.Excepciones.ExtencionNotFoundException;
import com.carlos.proyecto2.Jugador.Jugador;
import com.carlos.proyecto2.Jugador.ListaJugadores;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author benjamin
 */
public class RanlingJDialog extends javax.swing.JDialog {
    DefaultListModel modeloLista;
    DefaultListModel modeloLista2;
    private String directorioDeGuardado;
    ListaJugadores listaDelRanking;
    /**
     * Creates new form RanlingJDialog
     */
    public RanlingJDialog(java.awt.Frame parent, boolean modal,String directorioDeGuardado) throws ExtencionNotFoundException {
        super(parent,"Ranking",modal);
        this.directorioDeGuardado=directorioDeGuardado;
        initComponents();
        setLocationRelativeTo(null);
        modeloLista = new DefaultListModel();
        modeloLista2 = new DefaultListModel();
        JugadoresjList.setModel(modeloLista);
        PunteosjList.setModel(modeloLista2);
        leerRanking();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JugadoresjList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        PunteosjList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jScrollPane1.setViewportView(JugadoresjList);

        PunteosjList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(PunteosjList);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nombre Jugador");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Punteo");

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Decendente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Acendente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            // TODO add your handling code here:
            this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //REORDENA LA LISTAD E LOS JUGADORES ACENDENTEMENTE
        modeloLista.removeAllElements();
        modeloLista2.removeAllElements();
        if(listaDelRanking!=null)
        {   
            listaDelRanking.ordenar(true);
            Jugador temporal = listaDelRanking.getRaiz();
            for (int i = 0; i < listaDelRanking.jugadoresIngresados(); i++) {
                modeloLista.addElement(temporal.getNombreJugador());
                modeloLista2.addElement(temporal.getFondos());
                temporal = temporal.getJugadorSiguiente();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //REORDENA LA LISTAD E LOS JUGADORES DECENDENTEMENTE
        modeloLista.removeAllElements();
        modeloLista2.removeAllElements();
        if(listaDelRanking!=null)
        {   
            listaDelRanking.ordenar(false);
            Jugador temporal = listaDelRanking.getRaiz();
            for (int i = 0; i < listaDelRanking.jugadoresIngresados(); i++) {
                modeloLista.addElement(temporal.getNombreJugador());
                modeloLista2.addElement(temporal.getFondos());
                temporal = temporal.getJugadorSiguiente();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    /**
     * HACE LA LECTURA DEL ARCHIVO DE RANKING DEL JUEGO
     * @throws ExtencionNotFoundException
     */
    private void leerRanking() throws ExtencionNotFoundException
    {
        //LEE Y CONVEIRTE EL ARCHIVO A UN OBJETO 
        this.listaDelRanking = null;
        try {
            LecturaObjeto lecturaArchivo = new LecturaObjeto();
            listaDelRanking=(ListaJugadores)lecturaArchivo.readSerialization(this.directorioDeGuardado, "Ranking", "Ranking", ".rnk");
        } catch (IOException ex) {
            Logger.getLogger(RanlingJDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RanlingJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        //VERIFIAC SI EL ARCHIVO ESTA VACIO Y SI NO LO ESTA ENTONCES ESCRIBE EL RANKING EN LOS CONTENEDORES
        if(listaDelRanking!=null)
        {   
            listaDelRanking.ordenar(true);
            Jugador temporal = listaDelRanking.getRaiz();
            for (int i = 0; i < listaDelRanking.jugadoresIngresados(); i++) {
                modeloLista.addElement(temporal.getNombreJugador());
                modeloLista2.addElement(temporal.getFondos());
                temporal = temporal.getJugadorSiguiente();
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> JugadoresjList;
    private javax.swing.JList<String> PunteosjList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
