/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.carlos.proyecto2.gui;

import com.carlos.proyecto2.Tarjetas.TarjetaCaminar;
import com.carlos.proyecto2.Tarjetas.TarjetaCarcel;
import com.carlos.proyecto2.Tarjetas.TarjetaMovarACasilla;
import com.carlos.proyecto2.Tarjetas.TarjetaMulta;
import com.carlos.proyecto2.Tarjetas.TarjetaPagoJugadores;
import com.carlos.proyecto2.Tarjetas.TarjetaPerderTurno;
import com.carlos.proyecto2.Tarjetas.TarjetaPersonalizada;
import com.carlos.proyecto2.Tarjetas.TarjetaPremio;
import com.carlos.proyecto2.Tarjetas.TarjetaSalirCarcel;
import com.carlos.proyecto2.Tarjetas.Tarjetas;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
/**
 *
 * @author benjamin
 */
public class formularioDeCreacionTrajetaJPanel extends javax.swing.JPanel {
    private ConfiguracionTarjetasTableroJInternalFrame FrameConfiguracion;
    /**
     * Creates new form formularioDeCreacionTrajetaJPanel
     */
    private String tipoTarjeta;
    public formularioDeCreacionTrajetaJPanel(String tipoTarjeta,ConfiguracionTarjetasTableroJInternalFrame FrameConfiguracion) {
        this.FrameConfiguracion =FrameConfiguracion;
        this.tipoTarjeta = tipoTarjeta;
        initComponents();
        activarSegunSeleccion(tipoTarjeta);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RecibirPagarbuttonGroup = new javax.swing.ButtonGroup();
        jLabel14 = new javax.swing.JLabel();
        NombreCasillaDestinojComboBox = new javax.swing.JComboBox<>();
        RecibirDinerojRadioButton = new javax.swing.JRadioButton();
        PagarJugadoresjRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        IrCarceljCheckBox = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        PagarDinerojRadioButton = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DescripcionjTextArea = new javax.swing.JTextArea();
        ValidarTarjetajButton = new javax.swing.JButton();
        SentidoMovimientojComboBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        dineroAsignadojFormattedTextField = new javax.swing.JFormattedTextField();
        turnosAPerderjFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();

        jLabel14.setText("Nombre Casilla Destino");

        NombreCasillaDestinojComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Inicio", "Peten", "El Progreso", "SAT", "Aviateca", "Huehuetenango", "Quetzalteanngo", "Alta Verapaz", "Carcel", "Quiche", "Inde", "Izabal", "Chimaltenango", "Fegua", "Retalhuleu", "Solola", "Escuintla", "Descanso Gratis", "San Marcos", "Chiquimula", "Baja Verapaz", "Flomerca", "Zacapa", "Totonicapan", "Empagua", "Guatemala", "Vaya a la carcel", "Santa Rosa", "Sacatepequez", "Suchitepequez", "Microbus", "Jalapa", "Impuestos", "Jutiapa" }));

        RecibirPagarbuttonGroup.add(RecibirDinerojRadioButton);
        RecibirDinerojRadioButton.setText("Recibir Dinero");

        RecibirPagarbuttonGroup.add(PagarJugadoresjRadioButton);
        PagarJugadoresjRadioButton.setText("Pagar Jugadores");

        jLabel2.setText("Dinero asignado a la tarjeta");

        IrCarceljCheckBox.setText("Carcel");

        jLabel15.setText("Ir a carcel");

        jLabel6.setText("Descripcion Casilla");

        RecibirPagarbuttonGroup.add(PagarDinerojRadioButton);
        PagarDinerojRadioButton.setText("Pagar Dinero");

        DescripcionjTextArea.setColumns(20);
        DescripcionjTextArea.setRows(5);
        jScrollPane1.setViewportView(DescripcionjTextArea);

        ValidarTarjetajButton.setText("Validar tarjeta");
        ValidarTarjetajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValidarTarjetajButtonActionPerformed(evt);
            }
        });

        SentidoMovimientojComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Adelante", "Atras" }));

        jLabel13.setText("Turnos a perder");

        jLabel12.setText("Sentido Movimiento");

        dineroAsignadojFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######"))));

        try {
            turnosAPerderjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setText("Q.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RecibirDinerojRadioButton)
                            .addComponent(PagarJugadoresjRadioButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PagarDinerojRadioButton)
                                .addGap(106, 106, 106)
                                .addComponent(ValidarTarjetajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(NombreCasillaDestinojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(IrCarceljCheckBox)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(32, 32, 32)
                                .addComponent(SentidoMovimientojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(turnosAPerderjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(dineroAsignadojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(NombreCasillaDestinojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(turnosAPerderjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(IrCarceljCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(SentidoMovimientojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dineroAsignadojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(PagarJugadoresjRadioButton)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PagarDinerojRadioButton)
                            .addComponent(ValidarTarjetajButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RecibirDinerojRadioButton)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ValidarTarjetajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValidarTarjetajButtonActionPerformed
        //Incia los metodos para generar una tarjeta segun las opciones ingresadas en el formulario
        Tarjetas tarjetaCreada;
        if(habilitarOpcion(this.tipoTarjeta)){
            this.FrameConfiguracion.generarTarjeta(this.CrearTarjeta(tipoTarjeta));
            JOptionPane.showMessageDialog(this, "Tarjeta creada con exito", "Aprovado", JOptionPane.INFORMATION_MESSAGE);
            ValidarTarjetajButton.setEnabled(false);
        }
        else{
            JOptionPane.showMessageDialog(this, "Campos de texto no cumplidos", "Error de ingreso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_ValidarTarjetajButtonActionPerformed
    private boolean habilitarOpcion(String seleccion){
        //SE IDENTIFICA EL TIPO DE INSTANCIA QUE ES LA TEJETA A CREAR POR MEDIO DE LA OPCION DEL COMBO BOX Y HABILITA LOS CAMPOS DE INGRESO DE TRAJETAS AL JEUGO
        //SE EXTRAEN LOS DATOS DE LOS CONTENEDORES DE TEXTO Y SE HACE LA VADILACION PARA LA CREACION DE LA MISMA
        boolean confirmacion=false;
       
        if(seleccion.equals("Ir a carcel")){
            confirmacion = !DescripcionjTextArea.getText().equals("")&&IrCarceljCheckBox.isSelected();
        }
        if(seleccion.equals("Mover a casilla")){
            String sentido = (String)SentidoMovimientojComboBox.getSelectedItem();
            String casilladestino =(String)NombreCasillaDestinojComboBox.getSelectedItem();
            confirmacion = !DescripcionjTextArea.getText().equals("")&&!sentido.equals("")&&!casilladestino.equals("");
        }
        if(seleccion.equals("Multa")){
            String dineroAsignado = dineroAsignadojFormattedTextField.getText();
            int dinero=0;
            try {
                dinero = Integer.parseInt(dineroAsignado);
            } catch (Exception e) {
            }
            confirmacion = !DescripcionjTextArea.getText().equals("")&&(dinero>0)&&PagarDinerojRadioButton.isSelected();
        }
        if(seleccion.equals("Pago a jugadores")){
            String dineroAsignado = dineroAsignadojFormattedTextField.getText();
            int dinero=0;
            try {
                dinero = Integer.parseInt(dineroAsignado);
            } catch (Exception e) {
            }
            confirmacion = !DescripcionjTextArea.getText().equals("")&&(dinero>0)&&PagarJugadoresjRadioButton.isSelected();
        }
        if(seleccion.equals("Perder turno")){
            String turnosAPerder = turnosAPerderjFormattedTextField.getText();
            int turnosPerdidos=0;
            try {
                turnosPerdidos = Integer.parseInt(turnosAPerder);
            } catch (Exception e) {
            }
            confirmacion = !DescripcionjTextArea.getText().equals("")&&(turnosPerdidos>0);
        }
        if(seleccion.equals("Premio")){
            String dineroAsignado = dineroAsignadojFormattedTextField.getText();
            int dinero=0;
            try {
                dinero = Integer.parseInt(dineroAsignado);
            } catch (Exception e) {
            }
            confirmacion = !DescripcionjTextArea.getText().equals("")&&RecibirDinerojRadioButton.isSelected()&&(dinero>0);
        }
        if(seleccion.equals("Salir Carcel")){
            confirmacion = !DescripcionjTextArea.getText().equals("");
        }
        if(seleccion.equals("Personalizada")){
            
            String sentido = (String)SentidoMovimientojComboBox.getSelectedItem();
            String casilladestino =(String)NombreCasillaDestinojComboBox.getSelectedItem();
            
            String dineroAsignado = dineroAsignadojFormattedTextField.getText();
            int dinero=0;
            try {
                dinero = Integer.parseInt(dineroAsignado);
            } catch (Exception e) {
            }
            String turnosAPerder = turnosAPerderjFormattedTextField.getText();
            int turnosPerdidos=0;
            try {
                turnosPerdidos = Integer.parseInt(turnosAPerder);
            } catch (Exception e) {
            }
            boolean estadoBotones;
            boolean cantidadesNumericas;
            estadoBotones = PagarDinerojRadioButton.isSelected()||RecibirDinerojRadioButton.isSelected()||PagarJugadoresjRadioButton.isSelected();
            cantidadesNumericas = (turnosPerdidos>=0)||(dinero>=0);
            confirmacion = !DescripcionjTextArea.getText().equals("")&&(estadoBotones||cantidadesNumericas||!sentido.equals("")||IrCarceljCheckBox.isSelected());
        }
        return confirmacion;
    }
    /**
     * CREA UN TARJETA SEGUN LOS PARMETROS DE ENTRADA DEL FORMULARIO
     * @param seleccion tipo de tarjeta a crear
     * @return  tarjeta configurada
     */
    private Tarjetas CrearTarjeta(String seleccion){
        //se extrae la configuracion de la tarjeta por medio de la seleccion de un combobox y habilita el ingresos de datos
        Tarjetas tarjetaCreada=null;
        //EXTRAE KA INFORMACION SEGUN EL TIPO DE SELEECCION Y HACE LA CONVERCION DE DATOS INGRESADOS EN LOS CAMPOS GRAFICOS
        if(seleccion.equals("Ir a carcel")){
            
            tarjetaCreada = new TarjetaCarcel("", DescripcionjTextArea.getText());
        }
        if(seleccion.equals("Mover a casilla")){
            String sentido = (String)SentidoMovimientojComboBox.getSelectedItem();
            String casilladestino =(String)NombreCasillaDestinojComboBox.getSelectedItem();
            tarjetaCreada = new TarjetaMovarACasilla("", DescripcionjTextArea.getText(), casilladestino);
        }
        if(seleccion.equals("Multa")){
            String dineroAsignado = dineroAsignadojFormattedTextField.getText();
            int dinero=0;
            try {
                dinero = Integer.parseInt(dineroAsignado);
            } catch (Exception e) {
            }
            tarjetaCreada = new TarjetaMulta("", DescripcionjTextArea.getText(), dinero);
        }
        if(seleccion.equals("Pago a jugadores")){
            String dineroAsignado = dineroAsignadojFormattedTextField.getText();
            int dinero=0;
            try {
                dinero = Integer.parseInt(dineroAsignado);
            } catch (Exception e) {
            }
            tarjetaCreada = new TarjetaPagoJugadores("", DescripcionjTextArea.getText(), dinero);
        }
        if(seleccion.equals("Perder turno")){
            String turnosAPerder = turnosAPerderjFormattedTextField.getText();
            int turnosPerdidos=0;
            try {
                turnosPerdidos = Integer.parseInt(turnosAPerder);
            } catch (Exception e) {
            }
            tarjetaCreada = new TarjetaPerderTurno("", DescripcionjTextArea.getText(), turnosPerdidos);
        }
        if(seleccion.equals("Premio")){
            String dineroAsignado = dineroAsignadojFormattedTextField.getText();
            int dinero=0;
            try {
                dinero = Integer.parseInt(dineroAsignado);
            } catch (Exception e) {
            }
            tarjetaCreada = new TarjetaPremio("", DescripcionjTextArea.getText(), dinero);
        }
        if(seleccion.equals("Salir Carcel")){
            tarjetaCreada = new TarjetaSalirCarcel("", DescripcionjTextArea.getText());
        }
        if(seleccion.equals("Personalizada")){
            
            String sentido = (String)SentidoMovimientojComboBox.getSelectedItem();
            String casilladestino =(String)NombreCasillaDestinojComboBox.getSelectedItem();
            
            String dineroAsignado = dineroAsignadojFormattedTextField.getText();
            int dinero=0;
            try {
                dinero = Integer.parseInt(dineroAsignado);
            } catch (Exception e) {
            }
            String turnosAPerder = turnosAPerderjFormattedTextField.getText();
            int turnosPerdidos=0;
            try {
                turnosPerdidos = Integer.parseInt(turnosAPerder);
            } catch (Exception e) {
            }
            boolean estadoBotones;
            boolean cantidadesNumericas;
            estadoBotones = PagarDinerojRadioButton.isSelected()||RecibirDinerojRadioButton.isSelected()||PagarJugadoresjRadioButton.isSelected();
            cantidadesNumericas = (turnosPerdidos>=0)||(dinero>=0);
            if(RecibirDinerojRadioButton.isSelected()){
                tarjetaCreada = new TarjetaPersonalizada("", DescripcionjTextArea.getText(), dinero, 0, 0, casilladestino,turnosPerdidos);
            }
            if(PagarJugadoresjRadioButton.isSelected()){
                tarjetaCreada = new TarjetaPersonalizada("", DescripcionjTextArea.getText(), 0, dinero, 0, casilladestino,turnosPerdidos);
            }
            if(PagarDinerojRadioButton.isSelected()){
                tarjetaCreada = new TarjetaPersonalizada("", DescripcionjTextArea.getText(), 0, 0, dinero, casilladestino,turnosPerdidos);
            }   
        }
        return tarjetaCreada;
    }
    /**
     * ACTIVACION DE CAMPOS SEGUN TIPO DE SELEECCION 
     * @param seleccion  TIPO DE TARJETA A CREAR
     */
    private void activarSegunSeleccion(String seleccion){
        //SEGUN EL NOMBRE DEL TIPO DE TARJETA A CREAR SE HABILITAN LOS CAMPOS PARA INGRESAR DATOS
        if(seleccion.equals("Ir a carcel")){
            turnosAPerderjFormattedTextField.setEnabled(false);
            dineroAsignadojFormattedTextField.setEnabled(false);
            boolean estadoBotones = false;
            PagarDinerojRadioButton.setEnabled(estadoBotones);
            RecibirDinerojRadioButton.setEnabled(estadoBotones);
            PagarJugadoresjRadioButton.setEnabled(estadoBotones);
            DescripcionjTextArea.setEnabled(true);
            SentidoMovimientojComboBox.setEnabled(false);
            IrCarceljCheckBox.setEnabled(false);
            IrCarceljCheckBox.setSelected(true);
            NombreCasillaDestinojComboBox.setEnabled(false);
        }
        if(seleccion.equals("Mover a casilla")){
            turnosAPerderjFormattedTextField.setEnabled(false);
            dineroAsignadojFormattedTextField.setEnabled(false);
            boolean estadoBotones = false;
            PagarDinerojRadioButton.setEnabled(estadoBotones);
            RecibirDinerojRadioButton.setEnabled(estadoBotones);
            PagarJugadoresjRadioButton.setEnabled(estadoBotones);
            DescripcionjTextArea.setEnabled(true);
            SentidoMovimientojComboBox.setEnabled(true);
            IrCarceljCheckBox.setEnabled(false);
            NombreCasillaDestinojComboBox.setEnabled(true);
        }
        if(seleccion.equals("Multa")){
            turnosAPerderjFormattedTextField.setEnabled(false);
            dineroAsignadojFormattedTextField.setEnabled(true);
            PagarDinerojRadioButton.setEnabled(false);
            PagarDinerojRadioButton.setSelected(true);
            RecibirDinerojRadioButton.setEnabled(false);
            PagarJugadoresjRadioButton.setEnabled(false);
            DescripcionjTextArea.setEnabled(true);
            SentidoMovimientojComboBox.setEnabled(false);
            IrCarceljCheckBox.setEnabled(false);
            NombreCasillaDestinojComboBox.setEnabled(false);
        }
        if(seleccion.equals("Pago a jugadores")){
            turnosAPerderjFormattedTextField.setEnabled(false);
            dineroAsignadojFormattedTextField.setEnabled(true);
            boolean estadoBotones = false;
            PagarDinerojRadioButton.setEnabled(estadoBotones);
            RecibirDinerojRadioButton.setEnabled(estadoBotones);
            PagarJugadoresjRadioButton.setEnabled(estadoBotones);
            PagarJugadoresjRadioButton.setSelected(true);
            DescripcionjTextArea.setEnabled(true);
            SentidoMovimientojComboBox.setEnabled(false);
            IrCarceljCheckBox.setEnabled(false);
            NombreCasillaDestinojComboBox.setEnabled(false);
        }
        if(seleccion.equals("Perder turno")){
            turnosAPerderjFormattedTextField.setEnabled(true);
            dineroAsignadojFormattedTextField.setEnabled(false);
            boolean estadoBotones = false;
            PagarDinerojRadioButton.setEnabled(estadoBotones);
            RecibirDinerojRadioButton.setEnabled(estadoBotones);
            PagarJugadoresjRadioButton.setEnabled(estadoBotones);
            DescripcionjTextArea.setEnabled(true);
            SentidoMovimientojComboBox.setEnabled(false);
            IrCarceljCheckBox.setEnabled(false);
            NombreCasillaDestinojComboBox.setEnabled(false);
        }
        if(seleccion.equals("Premio")){
            turnosAPerderjFormattedTextField.setEnabled(false);
            dineroAsignadojFormattedTextField.setEnabled(true);
            boolean estadoBotones = false;
            PagarDinerojRadioButton.setEnabled(estadoBotones);
            RecibirDinerojRadioButton.setEnabled(estadoBotones);
            RecibirDinerojRadioButton.setSelected(true);
            PagarJugadoresjRadioButton.setEnabled(estadoBotones);
            DescripcionjTextArea.setEnabled(true);
            SentidoMovimientojComboBox.setEnabled(false);
            IrCarceljCheckBox.setEnabled(false);
            NombreCasillaDestinojComboBox.setEnabled(false);
        }
        if(seleccion.equals("Salir Carcel")){
            turnosAPerderjFormattedTextField.setEnabled(false);
            dineroAsignadojFormattedTextField.setEnabled(false);
            boolean estadoBotones = false;
            PagarDinerojRadioButton.setEnabled(estadoBotones);
            RecibirDinerojRadioButton.setEnabled(estadoBotones);
            PagarJugadoresjRadioButton.setEnabled(estadoBotones);
            DescripcionjTextArea.setEnabled(true);
            SentidoMovimientojComboBox.setEnabled(false);
            IrCarceljCheckBox.setEnabled(false);
            NombreCasillaDestinojComboBox.setEnabled(false);
        }
        if(seleccion.equals("Personalizada")){
            turnosAPerderjFormattedTextField.setEnabled(true);
            dineroAsignadojFormattedTextField.setEnabled(true);
            boolean estadoBotones = true;
            PagarDinerojRadioButton.setEnabled(estadoBotones);
            RecibirDinerojRadioButton.setEnabled(estadoBotones);
            PagarJugadoresjRadioButton.setEnabled(estadoBotones);
            DescripcionjTextArea.setEnabled(true);
            SentidoMovimientojComboBox.setEnabled(true);
            IrCarceljCheckBox.setEnabled(false);
            NombreCasillaDestinojComboBox.setEnabled(true);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea DescripcionjTextArea;
    private javax.swing.JCheckBox IrCarceljCheckBox;
    private javax.swing.JComboBox<String> NombreCasillaDestinojComboBox;
    private javax.swing.JRadioButton PagarDinerojRadioButton;
    private javax.swing.JRadioButton PagarJugadoresjRadioButton;
    private javax.swing.JRadioButton RecibirDinerojRadioButton;
    private javax.swing.ButtonGroup RecibirPagarbuttonGroup;
    private javax.swing.JComboBox<String> SentidoMovimientojComboBox;
    private javax.swing.JButton ValidarTarjetajButton;
    private javax.swing.JFormattedTextField dineroAsignadojFormattedTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField turnosAPerderjFormattedTextField;
    // End of variables declaration//GEN-END:variables
}
